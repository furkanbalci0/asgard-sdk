name: Release on Push to Main

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Get current version
        id: get_version
        run: |
          current_version=$(grep 'VERSION_NAME=' gradle.properties | cut -d'=' -f2)
          echo "::set-output name=current_version::$current_version"

      - name: Bump version
        id: bump_version
        run: |
          current_version=${{ steps.get_version.outputs.current_version }}
          IFS='.' read -r -a version_parts <<< "$current_version"
          version_parts[2]=$((version_parts[2]+1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "::set-output name=new_version::$new_version"

      - name: Build all .aar files with new version
        run: ./gradlew assembleRelease -Pversion=${{ steps.bump_version.outputs.new_version }}

      - name: Find and upload .aar files
        run: |
          for file in $(find . -name "*.aar"); do
            echo "Uploading $file"
            echo "$file" >> files-to-upload.txt
          done
        id: prepare_files

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-library-aars
          path: |
            $(cat files-to-upload.txt | tr '\n' ',')

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump_version.outputs.new_version }}
          name: Release ${{ steps.bump_version.outputs.new_version }}
          body: "Release of version ${{ steps.bump_version.outputs.new_version }}."
          files: $(cat files-to-upload.txt | tr '\n' ',')
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
