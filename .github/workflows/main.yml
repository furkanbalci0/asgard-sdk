name: Release on Push to Main

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Get current version
        id: get_version
        run: |
          current_version=$(grep 'VERSION_NAME=' gradle.properties | cut -d'=' -f2)
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Bump version
        id: bump_version
        run: |
          current_version=${{ env.current_version }}
          IFS='.' read -r -a version_parts <<< "$current_version"
          version_parts[2]=$((version_parts[2]+1))
          new_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          echo "new_version=$new_version" >> $GITHUB_ENV
          # Update the version in gradle.properties
          sed -i "s/VERSION_NAME=.*/VERSION_NAME=$new_version/" gradle.properties

      - name: Build and publish AAR files
        run: ./gradlew assembleRelease -Pversion=${{ env.new_version }}

      - name: Find .aar files
        id: find_files
        run: |
          aar_files=$(find . -name "*.aar")
          echo "aar_files=$aar_files" >> $GITHUB_ENV

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: my-library-aars
          path: ${{ env.aar_files }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.new_version }}
          name: Release ${{ env.new_version }}
          body: "Release of version ${{ env.new_version }}."
          files: ${{ env.aar_files }}
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
